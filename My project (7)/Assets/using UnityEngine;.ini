using UnityEngine;
using System.Collections;

public class UnifiedPlatformTrigger : MonoBehaviour
{
    public GameObject platform1;                     // Platform1 の参照
    public GameObject platform2;                     // Platform2 の参照
    public CameraFallController cameraFallController; // カメラの落下コントローラーの参照
    public float pauseDuration = 2.0f;               // 停止時間
    private bool platform1Triggered = false;         // Platform1のトリガーが発生したかどうか
    private bool platform2Triggered = false;         // Platform2のトリガーが発生したかどうか

    void OnTriggerEnter(Collider other)
    {
        if (other.CompareTag("Player"))
        {
            // PitTriggerとPlatform1の処理
            if (!platform1Triggered && platform1 != null)
            {
                platform1Triggered = true;
                DisablePlatformCollider(platform1);
                StartCoroutine(HandlePlatformTrigger(platform1));
                Debug.Log("Platform1 triggered");
            }

            // Platform2の処理
            if (platform1Triggered && !platform2Triggered && platform2 != null)
            {
                platform2Triggered = true;
                StartCoroutine(HandlePlatformTrigger(platform2));
                Debug.Log("Platform2 triggered after Platform1");
            }
        }
    }

    private void DisablePlatformCollider(GameObject platform)
    {
        BoxCollider boxCollider = platform.GetComponent<BoxCollider>();
        if (boxCollider != null)
        {
            boxCollider.enabled = false;
            Debug.Log($"{platform.name} BoxCollider disabled.");
        }
    }

    private IEnumerator HandlePlatformTrigger(GameObject platform)
    {
        // カメラの落下を停止
        cameraFallController.StopFalling();
        yield return new WaitForSeconds(pauseDuration);
        // 指定されたプラットフォームのBoxColliderを無効化
        DisablePlatformCollider(platform);
        // カメラの落下を再開
        cameraFallController.StartFalling();
    }
}